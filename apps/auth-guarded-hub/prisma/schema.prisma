generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  // pooled URL for runtime
  url       = env("NETLIFY_DATABASE_URL")
  // direct URL for migrations
  directUrl = env("NETLIFY_DATABASE_URL_UNPOOLED")
}

enum Plan {
  FREE
  BASIC
  PRO
}

model User {
  id           String       @id @default(cuid())
  name         String
  lastname     String
  email        String       @unique
  passwordHash String
  createdAt    DateTime     @default(now())
  updatedAt    DateTime     @updatedAt
  session      Session[]
  plan         Plan          @default(FREE)
}

model Session {
  id           String       @id @default(cuid())
  secretHash   String       @unique // sha256(secret)
  userId       String
  user         User         @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt    DateTime     @default(now())
  lastUsedAt   DateTime     @default(now())
  expiresAt    DateTime
  revokedAt    DateTime?

  @@index([userId])
  @@index([expiresAt])
}

model RestrictedContentPage {
  slug       String                     @id
  blocks     RestrictedContentBlock[]
  updatedAt  DateTime                   @updatedAt
}

model RestrictedContentBlock {
  id         String                      @id @default(cuid())
  pageSlug   String
  page       RestrictedContentPage       @relation(fields: [pageSlug], references: [slug], onDelete: Cascade)
  order      Int                         @default(0)
  type       String
  payload    Json
  minTier    Int                         @default(1)   // 0=PUBLIC, 1=FREE, 2=BASIC, 3=PRO
  updatedAt  DateTime                    @updatedAt

  @@index([pageSlug, minTier, order])
}